# -*- coding: utf-8 -*-
"""CrossOver_Trade_Sim.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1ar2ANe3fnOCmJKJs7CVF2GdrJ-IE_xTH
"""

import pandas as pd
import numpy as np
import matplotlib.pyplot as plt
import seaborn as sns
import yfinance as yf

sp500 = yf.download('^GSPC' , start='2022-01-01')
sp500

h10 = sp500.rolling(10).mean()
sp500['AV10'] = h10['Close']

h50 = sp500.rolling(50).mean()
sp500['AV50'] = h50['Close']

sp500[['Close', 'AV10' , 'AV50']]

sp500.dropna(inplace=True)

fig , ax = plt.subplots(figsize=(14, 7))
sp500['Close'].plot(ax=ax , label='Close Price' )
sp500['AV10'].plot(ax=ax , label='Rolling mean 10 days')
sp500['AV50'].plot(ax=ax , label='Rolling meab 50 days')
plt.title('Closing Price')
ax.legend()
plt.show()

# Define trading signals
# Buy (1) when AV10 > AV50, Sell (-1) when AV10 < AV50
sp500['Signal'] = np.where(sp500['AV10'] > sp500['AV50'], 1, -1)
sp500['Daily Return'] = sp500['Close'].pct_change()
sp500['Strategy Return'] = sp500['Daily Return'] * sp500['Signal'].shift()


initial_investment = 100
sp500['Cumulative Strategy Return'] = (1 + sp500['Strategy Return']).cumprod() * initial_investment

sp500['Cumulative Strategy Return'].plot( figsize=(14, 7), ylabel = 'Cumulative Strategy Return' , title = 'Return')
plt.show()

final_cumulative_return = sp500['Cumulative Strategy Return'].iloc[-1]
final_cumulative_return